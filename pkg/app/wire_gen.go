// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/aserto-dev/go-sample-project/pkg/app/impl"
	"github.com/aserto-dev/go-sample-project/pkg/app/server"
	"github.com/aserto-dev/go-sample-project/pkg/cc"
	"github.com/aserto-dev/go-sample-project/pkg/cc/config"
	"github.com/aserto-dev/go-utils/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

func BuildGoSampleProject(logWriter logger.Writer, errWriter logger.ErrWriter, configPath config.Path, overrides config.Overrider) (*GoSampleProject, func(), error) {
	ccCC, cleanup, err := cc.NewCC(logWriter, errWriter, configPath, overrides)
	if err != nil {
		return nil, nil, err
	}
	context := ccCC.Context
	zerologLogger := ccCC.Log
	configConfig := ccCC.Config
	info := impl.NewInfo(zerologLogger, configConfig)
	registrations := GRPCServerRegistrations(info)
	handlerRegistrations := GatewayServerRegistrations()
	serverServer, cleanup2, err := server.NewServer(ccCC, registrations, handlerRegistrations)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	goSampleProject := &GoSampleProject{
		Context:       context,
		Logger:        zerologLogger,
		Configuration: configConfig,
		Server:        serverServer,
	}
	return goSampleProject, func() {
		cleanup2()
		cleanup()
	}, nil
}

func BuildTestGoSampleProject(logWriter logger.Writer, errWriter logger.ErrWriter, configPath config.Path, overrides config.Overrider) (*GoSampleProject, func(), error) {
	ccCC, cleanup, err := cc.NewTestCC(logWriter, errWriter, configPath, overrides)
	if err != nil {
		return nil, nil, err
	}
	context := ccCC.Context
	zerologLogger := ccCC.Log
	configConfig := ccCC.Config
	info := impl.NewInfo(zerologLogger, configConfig)
	registrations := GRPCServerRegistrations(info)
	handlerRegistrations := GatewayServerRegistrations()
	serverServer, cleanup2, err := server.NewServer(ccCC, registrations, handlerRegistrations)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	goSampleProject := &GoSampleProject{
		Context:       context,
		Logger:        zerologLogger,
		Configuration: configConfig,
		Server:        serverServer,
	}
	return goSampleProject, func() {
		cleanup2()
		cleanup()
	}, nil
}

// wire.go:

var (
	gosampleprojectSet = wire.NewSet(cc.NewCC, GRPCServerRegistrations,
		GatewayServerRegistrations, server.NewServer, impl.NewInfo, wire.FieldsOf(new(*cc.CC), "Config", "Log", "Context", "ErrGroup"),
	)

	gosampleprojectTestSet = wire.NewSet(cc.NewTestCC, GRPCServerRegistrations,
		GatewayServerRegistrations, server.NewServer, impl.NewInfo, wire.FieldsOf(new(*cc.CC), "Config", "Log", "Context", "ErrGroup"),
	)
)
